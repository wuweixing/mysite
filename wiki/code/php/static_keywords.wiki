%title Static关键字详解
%template code

[[../../index|首页]] - [[../index|Code]] - [[index|PHP]]
==Static关键字详解==
----
===用于函数===

将 `static` 用于局部变量，则可以使该局部变量的存在周期延长，不会每调用一次函数就初始化一次

但如果将一个引用赋值给一个 `static` 局部变量，该 `static` 局部变量将失去周期延长的特性
----
===用于类===

将类属性或类方法声明为 `static`，就可以不需要实例化类而直接通过类名来访问，如 `Test::$myVar`、`Test::myFunc()`

`static` 修饰的属性不能通过类实例化的对象来访问，但静态方法不受此约束，如 `_obj->myVar` 是不允许的，而 `_obj->myFunc()` 却可以（但这里有个奇葩的现象，如果通过 `_obj::` 的方式访问，则前述对实例化对象的约束统统失效）

由于 `static` 方法无需对象就可调用，所以 `$this` 在 `static` 方法中不可用

`static` 方法中不能调用非静态的属性和方法（很显然，因为 `$this` 根本就不可用嘛），只能通过 `self::` 调用静态属性和静态方法

普通方法无任何限制，调用普通属性和普通方法可用 `$this->`，调用静态属性和静态方法可用 `self::`
----
===后期静态绑定===

用 `static::` 取代 `self::` 可使对象的绑定动态化，不再固定于所定义的类
----
<red>date</red> : 2013-10-09、2013-10-10
----

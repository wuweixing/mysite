%title Tk基础
%template code

[[../../index|首页]] - [[../index|Code]] - [[index|Ruby]]
==Tk基础==
----
===基本架构===

# 导入`Tk`包：`require 'tk'`
# 初始化一个主窗口：`root = TkRoot.new {title '窗口标题'}`
# 创建其他窗口部件
# 进入事件循环：`Tk.mainloop`
----
===常用部件===

* `TkLabel`：标签
* `TkButton`：按钮
----
===其他组件===

* `TkRoot`：主窗口
* `TkVariable`：变量绑定，可以将窗口部件的值绑定到某个变量上，两者共享数据，使用方法如 `var = TkVariable.new`
----
===常用属性===

* `title`：标题
* `text`：显示文字
* `pack`：绑定位置
* `font`：字体
* `command`：绑定方法
----
===常见事件===

* `Enter`：进入
* `Leave`：离开
* `Control-ButtonRelease-1`：按下`Ctrl`键（`Control`）的同时，鼠标左键（`1`）按下后释放的瞬间（`ButtonRelease`）
----
===部件方法===

* `取得组件属性`：`组件变量名['属性名']` 或 `组件变量名.cget('属性名')`
* `设置组件属性`：`组件变量名['属性名'] = 属性值` 或 `组件变量名.configure(多个键值对)`
* `绑定事件`：`组件变量名.bind('事件名') {具体操作}`
----
===编码惯例===

属性的设置无需等号，如 `title '我的标题'`

部件的名称习惯以`Tk`为前缀，如 `TkLabel`、`TkButton`，使用`new`方法初始化，并且需要指定父对象，如果没有指定能默认为`TkRoot`的实例
----
<red>date</red> : 2013-04-26
----
